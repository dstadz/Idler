generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
}

model Entity {
  id        String   @id @default(uuid())
  // resources Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations to Unit and Building (one-to-one relationship)
  unit                Unit?
  building            Building?
  ResourceInventory   ResourceInventory @relation(fields: [resourceInventoryId], references: [id])
  resourceInventoryId String

  @@map("entities")
}

model Unit {
  id       String @id @default(uuid())
  entityId String @unique
  entity   Entity @relation(fields: [entityId], references: [id])

  // Unit-specific fields
  stats    Int // e.g., health, attack
  unitType String // e.g., infantry, tank

  @@map("units")
}

model Building {
  id       String @id @default(uuid())
  entityId String @unique
  entity   Entity @relation(fields: [entityId], references: [id])

  type      String // HomeNode, SatelliteNode, etc.
  xPos      Float // X coordinate
  yPos      Float // Y coordinate
  resources Int

  level        Int // Building level
  techUnlocked Boolean // Has this building unlocked certain technologies?

  @@map("buildings")
}

model ResourceInventory {
  id String @id @default(uuid())

  wood   Int      @default(0)
  stone  Int      @default(0)
  iron   Int      @default(0)
  food   Int      @default(0)
  gold   Int      @default(0)
  power  Int      @default(0)
  energy Int      @default(0)
  water  Int      @default(0)
  // Add more resource fields as needed
  Entity Entity[]
}
